{"version":3,"sources":["components/layout/SignInLinks.js","store/actions/authActions.js","components/layout/SignOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetail.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","components/auth/PrivateRoute.js","App.js","serviceWorker.js","config/fbConfig.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","sighOut","getState","getFirebase","auth","signOut","then","type","props","className","to","onClick","profile","initials","SignOut","state","firebase","links","uid","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","onChange","e","setState","target","name","value","onSubmit","preventDefault","signIn","authError","htmlFor","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","add","authorId","Date","CreateProject","history","push","component","rest","render","App","exact","path","ProjectDetail","Boolean","window","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","initialState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","AuthIsLoaded","children","useSelector","isLoaded","class","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.fced0294.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nfunction SignIn(props) {\n    return (\n        <ul className=\"right\">\n            <li>\n                <NavLink to=\"/create\">New Post</NavLink>\n            </li>\n            <li>\n                <a onClick={props.sighOut}>Sign Out</a>\n            </li>\n            <li>\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink>\n            </li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        sighOut:() =>dispatch(signOut())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignIn)\n","export const signIn = (credentials) =>{\n    return(dispatch, getState, {getFirebase})=>{\n        const firebase = getFirebase()\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({type:'LOGIN_SUCCESS'})\n        }).catch((err)=>{\n            dispatch({type:'LOGIN_ERROR', err})\n        })\n    }\n}\n\nexport const signOut = () =>{\n    return (dispatch, getState,{getFirebase})=>{\n        const firebase = getFirebase()\n\n        firebase.auth().signOut()\n        .then(()=>{\n            dispatch({\n                type:\"SIGNOUT_SUCCESS\"\n            })\n        })\n    }\n}\n\n\nexport const signUp = (newUser) =>{\n    return(dispatch, getState, {getFirebase,getFirestore})=>{\n        const firebase = getFirebase()\n        const firestore = getFirestore()\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp)=>{\n            // Use firestore to add extra data to the users collection from the firebase data.\n            //we dont add to the collection we create a doc() with the user uid from firebase\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName:newUser.firstName,\n                lastName:newUser.lastName,\n                initials:newUser.firstName[0]+ newUser.lastName[0]\n            })\n        }).then(()=>{\n            dispatch({type:\"SIGNUP_SUCCESS\"})\n        }).catch((err)=>{\n            dispatch({type:\"SIGNUP_ERROR\",err})\n        })\n    }\n}","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nfunction SignOut() {\n    return (\n        <ul className=\"right\">\n            <li>\n                <NavLink to=\"/login\">Login</NavLink>\n            </li>\n            <li>\n                <NavLink to=\"/register\">Sign Up</NavLink>\n            </li>\n        </ul>\n    )\n}\n\nexport default SignOut\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport SignIn from './SignInLinks'\nimport SignOut from './SignOutLinks'\nimport { connect } from 'react-redux'\n\nfunction Navbar(props) {\n    const {auth,profile} = props\n\n    const links = auth.uid ? <SignIn profile={profile}/> : <SignOut/>;\n    return (\n        <div>\n            <nav className=\"nav-wrapper gray darken-3\">\n                <div className=\"container\">\n                    <Link to =\"/\" className=\"brand-logo\">HotPost</Link>\n                    {links}\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nconst mapStateToProps = state =>{\n    return{\n        auth: state.firebase.auth,\n        profile:state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)\n","import React from 'react'\nimport moment from 'moment'\n\nfunction Notification(props) {\n    const { notifications} = props\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item => {\n                            return(\n                                <li key={item.id}>\n                                    <span className=\"pink-test\">{item.user}</span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">{moment(item.time.toDate().fromNow())}</div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notification\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport moment from 'moment'\n\nfunction ProjectSummary({project}) {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <div className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary\n","import React, {Fragment} from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nfunction ProjectList({projects}) {\n    return (\n        <Fragment>\n            <div className=\"project-list section\">\n                {projects && projects.map(project =>{\n                    return(\n                        <Link to={'/project/' + project.id}>\n                            <ProjectSummary project={project} key={project.id}/>\n                        </Link>\n                    )\n                })}\n            </div>\n        </Fragment>\n    )\n}\n\nexport default ProjectList\n","import React, { Component } from 'react'\nimport Notification from './Notification'\nimport ProjectList from '../projects/ProjectList'\nimport {connect} from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport {compose} from 'redux'\n\nclass Dashboard extends Component {\n    render() {\n        const {projects, notifications}= this.props\n        return (\n            <div>\n                <div className=\"dashboard container\">\n                    <div className=\"row\">\n                        <div className=\"col s12 m6\">\n                            <ProjectList projects={projects}></ProjectList>\n                        </div>\n                        <div className=\"col s12 m5 offset-m1\">\n                            <Notification notifications={notifications}></Notification>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state =>{\n    return{\n        projects:state.firestore.ordered.project,\n        notifications:state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection:\"project\",orderBy:['createdAt','desc']},\n        //get the notifications collections created by cloud functions\n        {collection:\"notifications\", limit:3, orderBy: ['time', 'desc']}\n    ])\n)(Dashboard)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport moment from 'moment'\n\nfunction ProjectDetail(props) {\n    const {project} = props\n    if (project){\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted By {project.authorFirstName} {project.authorLastName}</div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }else{\n        return(\n            <div className=\"container center\">\n                <h3>Post Loading....</h3>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state,ownProps) =>{\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.project\n    const project = projects ? projects[id] : null\n    return{\n        project:project\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection:'project'}\n    ])\n)(ProjectDetail)\n","import React, { Component } from 'react'\nimport {Link,Redirect} from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\n\n\nclass SignIn extends Component {\n    state={\n        email:'',\n        password:\"\"\n    }\n\n    // change the value\n    onChange = e =>{\n        this.setState({[e.target.name]:e.target.value})\n    }\n    // submit form\n    onSubmit= e =>{\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n    render() {\n        const { authError,auth } = this.props\n        if(auth.uid) return <Redirect to=\"/\"/>\n        return (\n            <div className=\"container\">\n                <h4 className=\"text-center mr-4\">Welcome Back</h4>\n                <form className=\"white\" onSubmit={this.onSubmit}>\n                    <div className=\"input-field \">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" name=\"email\" className=\"form-control\" onChange={this.onChange} value={this.email}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" name=\"password\" className=\"form-control\" onChange={this.onChange} value={this.password} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                        { authError ? <p>{authError} </p>: null}\n                        </div>\n                    </div>\n                    <p className=\"text-muted text-small\">Don't  have an account? <Link to=\"/register\">Register</Link></p>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        authError:state.auth.authError,\n        auth:state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        signIn:(credentials)=>dispatch(signIn(credentials))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport {Link,Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/actions/authActions'\nimport { connect } from 'react-redux'\n\n\nclass SignUp extends Component {\n    state={\n        email:'',\n        password:\"\",\n        firstName:\"\",\n        lastName:\"\"\n    }\n\n    // change the value\n    onChange = e =>{\n        this.setState({[e.target.name]:e.target.value})\n    }\n    // submit form\n    onSubmit= e =>{\n        e.preventDefault()\n        this.props.signUp(this.state)\n    }\n    render() {\n        const { authError,auth } = this.props\n        if(auth.uid) return <Redirect to=\"/\"/>\n        return (\n            <div className=\"container\">\n                <h4 className=\"text-center mr-4\">Register</h4>\n                <form className=\"white\" onSubmit={this.onSubmit}>\n                <div className=\"input-field \">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" name=\"firstName\" className=\"form-control\" onChange={this.onChange} value={this.firstName}/>\n                    </div>\n                    <div className=\"input-field \">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" name=\"lastName\" className=\"form-control\" onChange={this.onChange} value={this.lastName}/>\n                    </div>\n                    <div className=\"input-field \">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" name=\"email\" className=\"form-control\" onChange={this.onChange} value={this.email}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" name=\"password\" className=\"form-control\" onChange={this.onChange} value={this.password} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Register</button>\n                        <div className=\"red-text center\">\n                        { authError ? <p>{authError} </p>: null}\n                        </div>\n                    </div>\n                    <p className=\"text-muted text-small\">Already have an account? <Link to=\"/login\">Login</Link></p>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) =>{\n    return{\n        authError:state.auth.authError,\n        auth:state.firebase.auth\n    }\n}\n\n\n\nconst mapDispatchToProps= (dispatch)=>{\n    return{\n        signUp:(newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","const createProject = (project) =>{\n    return(dispatch,getState,{getFirebase,getFirestore}) => {\n\n        // make async call to database\n        const firestore = getFirestore();\n        //get the profile and uid from the state\n        const profile = getState().firebase.profile\n        const uid = getState().firebase.auth.uid\n\n        firestore.collection('project').add({\n            ...project,\n            authorFirstName:profile.firstName,\n            authorLastName:profile.lastName,\n            authorId: uid,\n            createdAt: new Date()\n        }).then(()=>{\n            dispatch({\n                type:'CREATE_PROJECT',\n                project:project\n            })\n        }).catch((err)=>{\n            dispatch({\n                type:\"CREATE_PROJECT_ERROR\",\n                err\n            })\n        })  \n    }\n}\n\nexport default createProject","import React, { Component } from 'react'\nimport {Link} from \"react-router-dom\"\nimport {connect} from 'react-redux'\nimport createProject from '../../store/actions/projectActions'\n\n\nclass CreateProject extends Component {\n    state={\n        title:'',\n        content:\"\"\n    }\n\n    // change the value\n    onChange = e =>{\n        this.setState({[e.target.name]:e.target.value})\n    }\n    // submit form\n    onSubmit= e =>{\n        e.preventDefault()\n        //console.log(this.state)\n        this.props.createProject(this.state)\n        // redirect to homepage after posting\n        this.props.history.push(\"/\")\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <h4 className=\"text-center mr-4\">Create a New Project</h4>\n                <form className=\"white\" onSubmit={this.onSubmit}>\n                    <div className=\"input-field \">\n                        <label htmlFor=\"title\">Project Title</label>\n                        <input type=\"text\" name=\"title\" className=\"form-control\" onChange={this.onChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea name=\"content\"  className=\"materialize-textarea\" onChange={this.onChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        createProject:(project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(CreateProject)\n","import React from 'react'\nimport {Route,Redirect } from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nconst PrivateRoute = ({component:Component, auth, ...rest}) =>(\n    <Route\n    {...rest}\n    render={props=>{\n        if(!auth.uid){\n            return <Redirect to=\"/login\"></Redirect>\n        } else{\n            return <Component {...props}/>\n        }\n    }}\n    />\n)\n    \nconst mapStateToProps = state =>({\n    auth:state.firebase.auth\n})\n\n\nexport default connect(mapStateToProps)(PrivateRoute)","import React from 'react';\n// import './App.css';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetail from './components/projects/ProjectDetail';\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\nimport PrivateRoute from './components/auth/PrivateRoute';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar></Navbar>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Dashboard}/>\n          <PrivateRoute exact path=\"/project/:id\" component={ProjectDetail} />\n          <Route exact path=\"/login\" component={SignIn}/>\n          <Route exact path=\"/register\" component={SignUp}/>\n          <PrivateRoute exact path=\"/create\" component={CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/analytics';\n\n\nvar firebaseConfig = {\n    // apiKey: \"AIzaSyCVZgrwYV9ZaCMOdDthxL4v-GkXV2iDKPM\",\n    // authDomain: \"hotspot-d527c.firebaseapp.com\",\n    // databaseURL: \"https://hotspot-d527c.firebaseio.com\",\n    // projectId: \"hotspot-d527c\",\n    // storageBucket: \"hotspot-d527c.appspot.com\",\n    // messagingSenderId: \"154592092366\",\n    // appId: \"1:154592092366:web:a98a5311da33c5610d309f\",\n    // measurementId: \"G-3TB6LE72WM\"\n\n    apiKey: \"AIzaSyD5i6fzH-sSiN6K6ndEbMqWNJmHOIwRefw\",\n    authDomain: \"dynamoshop-c6279.firebaseapp.com\",\n    databaseURL: \"https://dynamoshop-c6279.firebaseio.com\",\n    projectId: \"dynamoshop-c6279\",\n    storageBucket: \"dynamoshop-c6279.appspot.com\",\n    messagingSenderId: \"192327612038\",\n    appId: \"1:192327612038:web:10979b37a732c945534307\",\n    measurementId: \"G-SX2W9LG2NE\"\n    \n  };\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore()\nfirebase.analytics();\n\nexport default firebase","const initialState = {\n    authError:null\n}\n\nconst authReducer = (state=initialState, action)=>{\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            return{\n                ...state,\n                authError:\"Login Failed\"\n            }\n        case 'LOGIN_SUCCESS':\n            return{\n                ...state,\n                authError:null\n            }\n\n        case 'SIGNOUT_SUCCCESS':\n            return state\n\n        case 'SIGNUP_SUCCESS':\n            return{\n                ...state,\n                authError:null\n            }\n\n        case \"SIGNUP_ERROR\":\n            return{\n                ...state,\n                authError:action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer","const initialState = {\n    projects:[]\n}\n\nconst projectReducer = (state=initialState, action)=>{\n    switch(action.type){\n        case \"CREATE_PROJECT\":\n            //console.log('created project', action.project)\n            return state\n\n        case \"CREATE_PROJECT_ERROR\":\n            //console.log('created error', action.err)\n            return state\n\n        default:\n            return state\n    }\n    return state\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer} from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\n\nconst rootReducer = combineReducers({\n    auth:authReducer,\n    project:projectReducer,\n    firestore:firestoreReducer,\n    firebase:firebaseReducer\n})\n\nexport default rootReducer","import React,{Fragment} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport{ createStore, applyMiddleware,compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {Provider,useSelector} from 'react-redux'\nimport { ReactReduxFirebaseProvider,getFirebase,isLoaded } from 'react-redux-firebase'\nimport { createFirestoreInstance,reduxFirestore,getFirestore } from  'redux-firestore'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n \n// import the rootReducer from store\nimport rootReducer from './store/reducers/rootReducer'\n\n//check if user is authenticatedd\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return(\n    // spinners for loading\n    <Fragment>\n      <div class=\"preloader-wrapper big active center\">\n      <div class=\"spinner-layer spinner-blue\">\n        <div class=\"circle-clipper left\">\n          <div class=\"circle\"></div>\n        </div><div class=\"gap-patch\">\n          <div class=\"circle\"></div>\n        </div><div class=\"circle-clipper right\">\n          <div class=\"circle\"></div>\n        </div>\n      </div>\n\n      <div class=\"spinner-layer spinner-red\">\n        <div class=\"circle-clipper left\">\n          <div class=\"circle\"></div>\n        </div><div class=\"gap-patch\">\n          <div class=\"circle\"></div>\n        </div><div class=\"circle-clipper right\">\n          <div class=\"circle\"></div>\n        </div>\n      </div>\n\n      <div class=\"spinner-layer spinner-yellow\">\n        <div class=\"circle-clipper left\">\n          <div class=\"circle\"></div>\n        </div><div class=\"gap-patch\">\n          <div class=\"circle\"></div>\n        </div><div class=\"circle-clipper right\">\n          <div class=\"circle\"></div>\n        </div>\n      </div>\n\n      <div class=\"spinner-layer spinner-green\">\n        <div class=\"circle-clipper left\">\n          <div class=\"circle\"></div>\n        </div><div class=\"gap-patch\">\n          <div class=\"circle\"></div>\n        </div><div class=\"circle-clipper right\">\n          <div class=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n    </Fragment>\n  ) ;\n  return children\n}\n\n// set user configuration\nconst rrfConfig = {\n  userProfile: 'users',\n  //attachAuthIsReady:true,\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\nconst store = createStore(rootReducer,composeWithDevTools(compose(\n  applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n  reduxFirestore(fbConfig),\n  ))\n);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  //attachAuthIsReady:true,\n};\n\n//store.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(\n    <React.StrictMode>\n      {/* Surround the app with provider to access the redux store */}\n      <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n          <AuthIsLoaded>\n            <App />\n          </AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n      </Provider>\n      \n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  \n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n  \n//})\n\n"],"sourceRoot":""}